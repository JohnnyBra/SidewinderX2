# Current Version v_202305130848
# Mas info - https://3dwork.gitbook.io/3dwork.io/klipper/mejoras/macros-mejoras/cambio-filamentos-m600
######################################################################
#                           CAMBIO DE FILAMENTO
######################################################################
#   M600
#   M601
#   CHANGE_FILAMENT
#   LOAD_FILAMENT
#   UNLOAD_FILAMENT
#   NOTIFY
#   BEEP
######################################################################

[gcode_macro M600]
description: Codigo gcode para el cambio de filamento
gcode:  
   CHANGE_FILAMENT

[gcode_macro M601]
description: Codigo gcode que pausa la impresion
gcode:
   PAUSE
   
[gcode_macro CHANGE_FILAMENT]
description: Cambio de filamento
gcode:
    PAUSE
    UNLOAD_FILAMENT
    #BEEP R=3

[gcode_macro LOAD_FILAMENT]
description: Realiza la carga de filamento calentando el hotend si es necesario
gcode:

    {% if printer.extruder.can_extrude %}   ; se comprueba que se pueda extruir para cargar el filamento
        _LOAD_FILAMENT
    {% else %}
        _TEMP_EXTRUDER
        _LOAD_FILAMENT
    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
description: Realiza la descarga de filameno calentando el hotend si es necesario
gcode:
    {% if printer.extruder.can_extrude %} ; se comprueba que se pueda extruir para descargar el filamento
        _UNLOAD_FILAMENT
    {% else %}
        _TEMP_EXTRUDER
        _UNLOAD_FILAMENT
    {% endif %}

[gcode_macro NOTIFY]
description: Envia un texto al LCD y Consola\n Uso: NOTIFY TEXT="TEXTO" CLEAR=[0|1] limpia pantalla en 10 segundos.
gcode:
    {% set TEXT = params.TEXT|default("")|string %}
    {% set CLEAR = params.CLEAR|default(0)|int %}
    
    {% if TEXT != "" %}
        M117 {TEXT}
        {action_respond_info("%s" % (TEXT))}

        {% if CLEAR|int == 1 %}
            UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
        {% endif %}
    {% endif %}


[gcode_macro BEEP]
description: Emite un pitido.\n Uso BEEP [R=NUMERO DE PITIDOS]
gcode:
    {% if 'output_pin beeper' in printer.configfile.settings and printer["gcode_macro M300"] is defined %}
        {% set R = params.R|default(0)|int %}
        {% for i in range(R) %}
            M300 P200
        {% endfor %}
    {% endif %}    

[gcode_macro _LOAD_FILAMENT]
gcode: |
    {% if printer.extruder.can_extrude %}   ; se comprueba que se pueda extruir para cargar el filamento
        {% set vg = printer["gcode_macro _VAR_GLOBALS"] %}
        SAVE_GCODE_STATE NAME=LOAD_state

        NOTIFY TEXT="Cargando filamento..."
        M83                                             ; activar extrusion relativa
        {% for r in range(vg.fil_num_repeats) %}        ; repite la carga de filamento x veces
            G1 E{vg.fil_length} F{vg.fil_speed}         ; se carga filamento x veces para evitar el limite de longitud
        {% endfor %}
        G1 E-{vg.retract_length} F{vg.retract_speed}    ; retrae el fimalento (indicado o configurado por firmware)
        NOTIFY TEXT="Filamento cargado." CLEAR=1

        RESTORE_GCODE_STATE NAME=LOAD_state
       # BEEP
    {% else %}
        NOTIFY TEXT="Temperatura baja, imposible cargar el filamento."
   {% endif %}

[gcode_macro _UNLOAD_FILAMENT]
gcode:
    {% if printer.extruder.can_extrude %} ; se comprueba que se pueda extruir para descargar el filamento
        {% set vg = printer["gcode_macro _VAR_GLOBALS"] %}
        SAVE_GCODE_STATE NAME=UNLOAD_state

        NOTIFY TEXT="Descargando filamento..."
        M83                                             ; activar extrusion relativa
        G1 E{vg.fil_length_purge} F{vg.fil_purge_speed} ; purga rapida
        G1 E-{vg.retract_length} F{vg.retract_speed}    ; retrae el fimalento (indicado o configurado por firmware)
        G4 P1000                                        ; esperamos a que enfrie un poco el filamento
        G1 E-{vg.fil_length/5} F{vg.fil_speed}          ; se descarga el filamento lentamente para evitar atascos
        {% for r in range(vg.fil_num_repeats) %}        ; repite la descarga de filamento x veces
            G1 E-{vg.fil_length} F{vg.fil_fast_speed}   ; se descarga filamento x veces para evitar el limite de longitud
        {% endfor %}

        NOTIFY TEXT="Filamento descargado." CLEAR=1
        RESTORE_GCODE_STATE NAME=UNLOAD_state
       # BEEP
    {% else %}
        NOTIFY TEXT="Temperatura baja, imposible descargar el filamento."
    {% endif %}

[gcode_macro _TEMP_EXTRUDER]
gcode:
    {% if not printer.extruder.can_extrude %} ; se comprueba que NO se pueda extruir
        {% set vg = printer["gcode_macro _VAR_GLOBALS"] %}
        {% set min_temp = printer.extruder.min_extrude_temp|default(170) %}
        {% set printing_temp = vg.temp_extruder_pause if printer.pause_resume.is_paused else vg.temp_extruder %}
       # BEEP
        NOTIFY TEXT="Temperatura baja, calentando y esperando temperatura optima."
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={printing_temp}; espera hasta alcanzar la temperatura de extrusion
    {% endif %}

[delayed_gcode _CLEAR_DISPLAY]
gcode:
  M117
  
  # Current Version v_202305130848
# Mas info - https://3dwork.gitbook.io/3dwork.io/klipper/mejoras/macros-mejoras/cambio-filamentos-m600

[gcode_macro MOVE_PARK]
description: Aparca el cabezal de impresion, se puede ajustar en _VAR_GLOBALS.
gcode:
    {% set vg = printer["gcode_macro _VAR_GLOBALS"] %}
   
    # Se realiza el calculo de la posicion Z, X e Y se definen en _VAR_GLOBALS.
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set pos_z = printer.toolhead.position.z|float %}

    {% if pos_z < vg.z_park %}
        {% set z_safe = (vg.z_park - pos_z) %}
    {% elif pos_z < (max_z - vg.z_up) %}
        {% set z_safe = vg.z_park %}
    {% else %}
        {% set z_safe = max_z - pos_z %}
    {% endif %}

    NOTIFY TEXT="Aparcando cabezal de impresion"

    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{vg.retract_length} F2100
    {% else %}
        NOTIFY TEXT="Temperatura baja, imposible extruir"
    {% endif %}
    
    {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F6000
        G90
        G1 X{vg.x_park} Y{vg.y_park} F6000
    {% else %}
        NOTIFY TEXT="Ejes no inicializados.(HOME_ALL)"
    {% endif %}
	
	# Current Version v_202305130848
# Mas info - https://3dwork.gitbook.io/3dwork.io/klipper/mejoras/macros-mejoras/cambio-filamentos-m600

[gcode_macro PAUSE]
description: Pausa la impresion actual.
rename_existing: BASE_PAUSE
gcode:
    {% if not printer.pause_resume.is_paused %}
        {% set vg = printer["gcode_macro _VAR_GLOBALS"] %}
        SET_GCODE_VARIABLE MACRO=_VAR_GLOBALS VARIABLE=temp_extruder_pause VALUE={printer.extruder.target}
        M400
        SAVE_GCODE_STATE NAME=PAUSE_state
        BASE_PAUSE
      #  BEEP
        MOVE_PARK
       # BEEP R={vg.beeps}
    {% endif %}
	
	# Current Version v_202305130848
# Mas info - https://3dwork.gitbook.io/3dwork.io/klipper/mejoras/macros-mejoras/cambio-filamentos-m600

[gcode_macro RESUME]
description: Reanuda la impresion si la impresora esta en pausa.
rename_existing: RESUME_BASE
gcode:
    {% if printer.pause_resume.is_paused %}
        {% set vg = printer["gcode_macro _VAR_GLOBALS"] %}
        
        {% if printer.extruder.can_extrude %}
            G91
            G1 E{vg.retract_length} F2100
            G90
        {% else %}
            NOTIFY TEXT="Temperatura baja, imposible extruir"
        {% endif %}
        
        M109 S{vg.temp_extruder_pause}   ; espera hasta alcanzar la temperatura previa del extrusor
        RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
        RESUME_BASE
    {% endif %}
	
	# Current Version v_202305130848
# Mas info - https://3dwork.gitbook.io/3dwork.io/klipper/mejoras/macros-mejoras/cambio-filamentos-m600

[gcode_macro CANCEL_PRINT]
description: Cancels the printer
rename_existing: CANCEL_PRINT_BASE
gcode:
    END_PRINT
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    #SDCARD_RESET_FILE
    CANCEL_PRINT_BASE
	
	# Current Version v_202305171041
# More detailed information and description - https://3dwork.gitbook.io/3dwork.io/klipper/empezamos/configuracion-klipper-en-laminadores
# Configure prime line - From Klipper-Adaptive-Meshing-Purging https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging

### START_PRINT ###
[gcode_macro START_PRINT]

##############################################################################
# BOOLEAN VARIABLES(True|False) ALWAYS UPPERCASE THE FIRST LETTER            #
# LAS VARIABLES BOOLEANAS(True|False) SIEMPRE LA PRIMERA LETRA EN MAYUSCULAS #
##############################################################################

variable_buffer: 80
variable_adaptive_enable: True     # Change to False if you'd like the purge to be in the same spot every print - Cambie a False si desea que la purga esté en el mismo lugar en cada impresión
variable_z_height: 0.3               # Height above the bed to purge - Altura sobre la cama para purgar
variable_purge_amount: 35            # Amount of filament in millimeters to purge - Cantidad de filamento en milímetros a purgar
variable_line_length: 100            # (USE 80 as less) Overall desired length of purge line in millimeters, around 1/5th of X axis length is a good starting value - (USE 80 como poco) La longitud total deseada de la línea de purga en milímetros, alrededor de 1/5 de la longitud del eje X es un buen valor inicial
variable_flow_rate: 12               # Desired flow rate in mm3/s (Around 12 for standard flow hotends, around 24 for high flow hotends) - Caudal deseado en mm3/s (Alrededor de 12 para hotends de flujo estándar, alrededor de 24 para hotends de alto flujo)
variable_x_default: 5                # Default X location to purge. If adaptive_enable is True, this is overwritten - Ubicación X predeterminada para purgar. Si adaptive_enable es True, esto se sobrescribe
variable_y_default: 5                # Default Y location to purge. If adaptive_enable is True, this is overwritten - Ubicación Y predeterminada para purgar. Si adaptive_enable es True, esto se sobrescribe
variable_distance_to_object_y: 10    # Y distance in millimeters away from the print area for purging. Must be less than or equal to y_default if adaptive_enable is False - Distancia Y en milímetros desde el área de impresión para la purga. Debe ser menor o igual que y_default si adaptive_enable es False

#Configure Leveling
variable_calibrate_z_tilt: False    # If True launch z-tilt calibration process - Si es True, realiza el proceso de calibración z-tilt - https://3dwork.qitec.net/klipper/empezamos/nivelacion-gantry-z-tilt
variable_calibrate_bed_mesh: True   # If True create a new mesh False load default mesh - Si es True, crea una malla nueva. False, carga la malla predeterminada. - https://3dwork.qitec.net/klipper/empezamos/malla-nivelacion-de-cama-klipper

gcode:
    #Get Printer built volume dimensions
    #Obtener las dimensiones de impresion
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
    { action_respond_info("x_max        : %f" % (X_MAX)) }
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
    { action_respond_info("y_max        : %f" % (Y_MAX)) }
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}
    { action_respond_info("z_max        : %f" % (Z_MAX)) }

    #Get Printer config
    #Obtener configuración de la impresora
    {% set PROBECONFIG = printer['configfile'].config["probe"] is defined %}
    {% set BLTOUCHCONFIG = printer['configfile'].config["bltouch"] is defined %}

    {% set Z_TILT = printer['configfile'].config["z_tilt"] is defined %}
    { action_respond_info("z-tilt  : %d" % (Z_TILT)) }

    #Get Nozzle diameter and filament width
    #Obtener el diámetro de la boquilla y el ancho del filamento
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
    { action_respond_info("nozzle_diameter  : %f" % (NOZZLE)) }
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}
    { action_respond_info("filament_diameter  : %f" % (FILADIA)) }

    #Set Start coordinates of priming lines
    #Establecer las coordenadas de inicio de las líneas de purga
    {% set X_START = 10.0|default(10.0)|float %}
    { action_respond_info("x_start        : %f" % (X_START)) }
    {% set Y_START = 20.0|default(20.0)|float %}
    { action_respond_info("y_start        : %f" % (Y_START)) }

    #Get Bed and Extruder temperature from Slicer GCode
    #Obtener la temperatura de la cama y del extrusor del GCode del laminador
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    { action_respond_info("bed_temperature        : %f" % (BED_TEMP)) }
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    { action_respond_info("extruder_temperature        : %f" % (EXTRUDER_TEMP)) }

    #Get print boundaries from Slicer GCode
    #Obtener límites de impresión del GCode del laminador
    {% if adaptive_enable and not params.PRINT_MIN %}
        {action_respond_info("PRINT_MIN is not provided")}
    {% else %}
        {action_respond_info("PRINT_MIN is provided")}
    {% endif %}

    #Pre-heat bed
    #Precalentar la cama
    M117 Pre-heating bed...
    { action_respond_info("Pre-heating bed : %d" % (BED_TEMP)) }
    M140 S{BED_TEMP}

    {% if PROBECONFIG %}
        # Wait for extruder to reach 170 so an inductive probe (if present) is at a predictable temp - Espera a que la extrusora alcance 170 para que una sonda inductiva (si esta presente) este a una temperatura optima
        # Also allows the bed heat to spread a little, and softens any plastic that might be stuck to the nozzle - También permite que el calor de la cama se propague un poco y ablanda cualquier plástico que pueda estar adherido a la boquilla
        {action_respond_info("WAITING MINIMUM PROBE TEMPERATURE")}
        {% set min_temp = printer.extruder.min_extrude_temp|default(170) %}
        { action_respond_info("Min Extrude Temp : %d" % (min_temp)) }
        { action_respond_info("Max Extrude Temp : %d" % (EXTRUDER_TEMP)) }
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={EXTRUDER_TEMP}
    {% else %}
        {action_respond_info("No PROBE detected bypass extruder MIN temp")}
    {% endif %}

    #Home
    M117 Homing...
    {action_respond_info("Homing...")}
    G28
    {action_respond_info("Homing Position...")}
    GET_POSITION

    #Z-tilt Leveling
    {% if Z_TILT %}
        {% if calibrate_z_tilt %}
            M117 Z-tilt Leveling...
            {action_respond_info("Z-TILT Leveling...")}
            Z_TILT_ADJUST
        {% endif %}
    {% else %}
        {action_respond_info("Z-TILT is not enabled")}
    {% endif %}

    #Bed Leveling
    M117 Bed Leveling...
    {action_respond_info("Bed Leveling...")}

    {% if calibrate_bed_mesh and (BLTOUCHCONFIG or PROBECONFIG) %}
        BED_MESH_CLEAR
        { action_respond_info("Bed Leveling Mesh Cleared...")}
        { action_respond_info("print_min: %s" % params.PRINT_MIN) }
        { action_respond_info("print_max: %s" % params.PRINT_MAX) }
        BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX} PROFILE=default # Create a new bed mesh
        {action_respond_info("Bed Leveling Creating New Mesh...")}
        BED_MESH_PROFILE LOAD=default # Load stored bed mesh
        {action_respond_info("Bed Leveling Loading Default Mesh...")}
    {% else %}
        BED_MESH_PROFILE LOAD=default # Load stored bed mesh
        {action_respond_info("Bed Leveling Loading Default Mesh...")}
    {% endif %}
    
    #Pre-heat nozzle
    #Precalentar nozzle
    M117 Pre-heating extruder...
    { action_respond_info("Pre-heating extruder : %d" % (EXTRUDER_TEMP)) }
    M104 S{EXTRUDER_TEMP}

    #Move up to clean bed
    #Desplazamiento a zona de calentado
    M117 Parking to Heat Position...
    {action_respond_info("Parking to Heat Position...")}
    G1 X{X_MAX / 2.0} Y{Y_MAX - 250} Z{Z_MAX / 4.0} F6000
    {action_respond_info("Parking Position...")}
    GET_POSITION

    #Heat nozzle and bed
    #Calentando nozzle y cama
    M117 Heating cosas...
    { action_respond_info("Heating Bed at : %d" % (BED_TEMP)) }
    M190 S{BED_TEMP}

    M117 Heating Extruder...
    { action_respond_info("Heating Extruder at : %d" % (EXTRUDER_TEMP)) }
    M109 S{EXTRUDER_TEMP} T0                       

    #Prime Line
    #Linea de purgado
    {% if adaptive_enable %} 
        {% if params.PRINT_MIN %}
            {% set print_min_y = params.PRINT_MIN.split(",")[1]|float %}
            {% set y_origin = (print_min_y - distance_to_object_y) | float %}
            {% if y_origin < 5 %} # Check y_origin out of bounds
                { action_respond_info("Corrected y_origin dynamic prime line out of bounds : %f" % (y_origin)) }
                {% set y_origin = y_default | float %}
            {% endif %}
            {% set x_origin = params.PRINT_MIN.split(",")[0]|float %}
            { action_respond_info("Prime Line x_origin          : %f" % (x_origin)) }
            { action_respond_info("Prime Line y_origin          : %f" % (y_origin)) }
        {% endif %}
    {% else %}
        {% set x_origin = x_default | float %}
        {% set y_origin = y_default | float %}
        { action_respond_info("Prime Line x_origin          : %f" % (x_origin)) }
        { action_respond_info("Prime Line y_origin          : %f" % (y_origin)) }
    {% endif %}

    {% set max_extrude_cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
    { action_respond_info("max_extrude_cross_section : %f" % (max_extrude_cross_section)) }
    {% set z_offset = 0 %}

    {% if BLTOUCHCONFIG %}
        M117 BlTouch zoffset used...
        {action_respond_info("BlTouch zoffset used...")}
        {% set z_offset = printer.configfile.settings.bltouch.z_offset %}
    {% elif PROBECONFIG %}
        M117 Probe zoffset used...
        {action_respond_info("Probe zoffset used...")}
        {% set z_offset = printer.configfile.config.probe.z_offset %}
    {% endif %}

    # Prime Line Volumetric Calculations
    # Calculos volumetricos para la linea de purga
    {% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
    { action_respond_info("nozzle_dia : %f" % (nozzle_dia)) }
    {% set cross_section = nozzle_dia * z_height | float %}
    { action_respond_info("cross_section : %f" % (cross_section)) }
    {% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
    { action_respond_info("purge_move_speed : %f" % (purge_move_speed)) }
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
    { action_respond_info("travel_speed : %f" % (travel_speed)) }

    M117 Prime Line...
    {action_respond_info("Prime Line...")}

    G92 E0                                                              # Reset extruder
    G0 F{travel_speed/1.5}                                              # Set travel speed
    G90                                                                 # Absolute positioning
    G1 X{x_origin} Y{y_origin}                                          # Move to purge position
    G1 Z{nozzle_dia}                                                    # Move to purge Z height
    M83                                                                 # Relative extrusion mode

    # Prime Line X check to adjust to PRINT_MAX_X coordinate
    {% set x_prime_end = (x_origin + line_length) | float %}
    {% set print_max_x = params.PRINT_MAX.split(",")[0]|float %}
    {% if x_prime_end > print_max_x %}
        {% set x_prime_end = print_max_x | float %}
    {% endif %}
    { action_respond_info("x_prime_end : %f" % (x_prime_end)) }
    
    {% if adaptive_enable == False %} 
      M117 Prime Blob...
      {action_respond_info("Prime Blob...")}
      # Extrude a blob
      G1 F60 E20
      # 40% fan
      M106 S102 
      # Move the extruder up by 5mm while extruding, breaks away from blob
      G1 Z5 F100 E5  
      # Move to wipe position, but keep extruding so the wipe is attached to blob
      G1 F200 X{x_origin + 25} E1 
      # Go down diagonally while extruding
      # Broken down in z moves under 2mm as a workaround for a tuning tower test.
      # The tuning tower command thinks a new print has been started when z moves over 2mm and aborts.
      G1 F200 X{x_origin + 30} Z3.8 E0.5
      G1 F200 X{x_origin + 35} Z2.6 E0.5
      G1 F200 X{x_origin + 40} Z1.4 E0.5
      G1 F200 X{x_origin + 45} Z0.2 E0.5
      # 0% fan
      M106 S0
      # Wipe line
      M117 Wiping Prime Line...
      {action_respond_info("Wiping Prime Line...")}
      G1 X{x_prime_end - 10} Z{z_height} E{purge_amount/2} F{purge_move_speed}   # Purge line
      G1 X{x_prime_end} F{travel_speed}
    {% else %}
      M117 Wiping Prime Line...
      {action_respond_info("Wiping Prime Line...")}
      # Wipe line
      G1 X{x_prime_end - 10} Z{z_height} E{purge_amount/2} F{purge_move_speed}   # Purge line
      G1 X{x_prime_end} F{travel_speed}
    {% endif %}

    M117 Getting Ready to Print...
    {action_respond_info("Getting Ready to Print...")}
    G1 E-{nozzle_dia} F2100                                             # Retract nozzle diameter
    G92 E0                                                              # Reset extruder distance
    M82                                                                 # Absolute extrusion mode
    G0 Z{z_height * 2} F{travel_speed}                                  # Z hop

    M117 Ready to Print...
    {action_respond_info("Ready to Print...")}

[gcode_macro SETUP_START_PRINT]
gcode:
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=calibrate_bed_mesh VALUE={params.CALIBRATE_BED_MESH|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=adaptive_enable VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=z_height VALUE={params.Z_HEIGHT|default(0.4)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=purge_amount VALUE={params.PURGE_AMOUNT|default(40)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=line_length VALUE={params.LINE_LENGTH|default(50)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=flow_rate VALUE={params.FLOW_RATE|default(12)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=x_default VALUE={params.X_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=y_default VALUE={params.Y_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=distance_to_object_y VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float} 
	
	# Current Version v_202305171041
#### END_PRINT ####
[gcode_macro END_PRINT]
gcode:
        #Get Printer built volume dimensions
        #Obtener dimensiones area de impresion
        {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
        {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}

        #Fix-up extruder
        #Asegurando extrusion
        G91                                            
        G1 E-2 F2700            # First retraction movement, adjust to your machine if needed - Primera retraccion, ajusta a tu maquina                                   
        G1 E-1.5 Z0.2 F2400     # Second retraction movement - Segunda retracción                
        G1 X5 Y5 F6000                               
        G1 Z10                                     
        G90                                        

        #Present print
        #Presentando impresion
        G1 Z{printer.toolhead.position.z + 50} F600
        G1 X{X_MAX / 2} Y{Y_MAX} F6000
        M106 S0                 # Disable fans - Desactivar ventiladores                                   
        M104 S0                 # Disable bed - Apagar cama
        M140 S0                 # Disable nozzle - Apagar nozzle                

        #Disable Steppers
        #Desactivando motores
        M84 X Y E    

# Pressure Advance test macro by drawing 20 simple lines
#
# Adapted from: https://www.reddit.com/r/VORONDesign/comments/sjdiol/pressure_advance_testing_macro_klipper/
# to suit home-made free ABL that requires a pause after homing to manually retract the probe.
#
# Este proceso es una unica macro:
#
# - PRESSURE_ADVANCE_TEST
#   primero alcanza las temperaturas objetivo de la cama y el extrusor, luego un homeall y hace un sondeo
#   automatico si hay un dispositivo para ello, seguidamente inicia la prueba de Avance de Presion, imprimiendo
#   20 lineas usando diferentes valores de avance de presion, segun los valores indicados en los parametros 
#   (PA_START=0.01 PA_STEP=0.01 NZL=0.4).
#
#   BED_TEMP      = temperatura objetivo de la cama.
#   EXTRUDER_TEMP = temperatura objetivo del extrusor.
#   PA_START      = presion de avance inicial.
#   PA_STEP       = incremento por linea de la presion de avance.
#   NZL           = diametro de la boquilla, por defecto la que se tenga configurada en klipper (0.4).
#
# ej. PRESSURE_ADVANCE_TEST BED_TEMP=65 EXTRUDER_TEMP=205 PA_START=0.01 PA_STEP=0.01 NZL=0.4
#
# Al terminar la prueba se realiza el calculo del presure advance:
# Pressure Advance = PA_START + (PA_STEP * n)  n = linea mas recta y sin imperfecciones (0-19). 
#
# ej. .01 + (.01 * 11) = .12
#
# SET_PRESSURE_ADVANCE ADVANCE=0.12
#

[gcode_macro PRESSURE_ADVANCE_TEST]
gcode:

  ; variables de configuracion
  {% set NZL_CFG = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}    ; diametro de la boquilla configurada en klipper.
  {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float %}   ; posiciona el cabezal en position_max
  {% set Y_MAX = printer.configfile.config["stepper_y"]["position_max"]|float %}   ; posiciona el cabezal en position_max
  {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float %}   ; posiciona el cabezal en position_max
  {% set X_MID = X_MAX / 2.0 %}  ; centro de la cama en eje X
  {% set Y_MID = Y_MAX / 2.0 %}  ; centro de la cama en eje Y

  ; parametros
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  {% set PA_START = params.PA_START|default(0.0)|float %}
  {% set PA_STEP = params.PA_STEP|default(0.005)|float %}
  {% set NZL = params.NZL|default(NZL_CFG)|float %}
  
  ; constantes de movimiento
  {% set Y_HOME = Y_MAX-5 %}   ; posiciona el cabezal en position_max -5
  {% set X_HOME = X_MAX-5 %}   ; posiciona el cabezal en position_max -5
  {% set Z = Z_MAX / 2 %}      ; subir Z al terminar el test
  {% set XY_SPEED = 1500 %}    ; velocidad de desplazamiento del eje X e Y al finalizar   
  {% set Z_SPEED = 600 %}      ; velocidad de desplazamiento del eje Z

  ; variables
  {% set E20 = (0.1147475 * NZL) * 20|float %}
  {% set E40 = (0.1147475 * NZL) * 40|float %}


  # gcode
  M140 S{BED_TEMP}      ; Empezar a calentar la cama.
  M104 S{EXTRUDER_TEMP} ; Empezar a calentar la extrusora.
  M190 S{BED_TEMP}      ; Espere a que la cama alcance la temperatura objetivo antes de continuar.
  M109 S{EXTRUDER_TEMP} ; Espere a que el extrusor alcance la temperatura objetivo antes de continuar.
  G28                   ; Inicio todos los ejes.
  {% if printer.configfile.config["bltouch"] is defined or 
        printer.configfile.config["probe"] is defined  %}
    BED_MESH_CALIBRATE  ; G29 sondeo de la cama.
  {% endif %}

  G21     ; unidades milimetricas
  G90     ; absoluto XYZ
  M83     ; relative E
  G92 E0  ; restablecer la extrusora 
  M106 S0 ; poner la velocidad del ventilador a cero

  SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
  #
  # Doble linea de purgado en el lado izquierdo de la cama.
  #
  G1 X10.1 Y20 Z0.28 F5000.0             ;  mover a la posicion inicial
  G1 X10.1 Y{Y_MAX-20} Z0.28 F1500.0 E15 ;  dibujar la primera linea
  G1 X10.4 Y{Y_MAX-20} Z0.28 F5000.0     ;  muevete un poco hacia un lado
  G1 X10.4 Y20 Z0.28 F1500.0 E30         ;  dibujar la segunda linea
  G1 E-2 F1800                           ;  retraer
  G1 Z5 F300                             ;  moverse por encima de la altura de la capa

  # bucle para imprimir las 20 lineas.
  {% for i in range(0, 20) %}
    SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)}           ;  establecer avance de presion en cada linea
    M117 Avance de presion de prueba:  {PA_START + (i * PA_STEP)}
    G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F5000                        ;  mover a la posiciun inicial
    G1 Z0.2 F300                                                      ;  mover a la altura de la capa
    G1 E2 F1800                                                       ;  extruir
    G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300                  ;  linea de impresion 1 parte
    G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000                 ;  linea de impresion 2 parte
    G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300                  ;  linea de impresion 3 parte
    G1 E-2 F1800                                                      ;  retraer
    G1 Z5 F300                                                        ;  moverse por encima de la altura de la capa, a 5mm
  {% endfor %}

  TURN_OFF_HEATERS ; desactiva extrusor y cama

  # Se prepara la cama para mostrar el resultado del test

  ;  Desplaza Z al centro
  G1 Z{Z} F{Z_SPEED}

  ; desplaza la cama hacia adelante solo si la cinematica lo permite.
  {% if printer.configfile.config["printer"]["kinematics"]|lower in ['cartesian' , 'deltesian' , 'corexz'] %}
    G1 X{X_HOME} Y{Y_HOME} F{XY_SPEED} ;  Presenta la impresion desplazando la cama hacia adelante y aparcando el cabezal.
  {% endif %}

  M117 Encuentre la mejor linea y multipliquela por ({PA_START} + (linea seleccionada(0-19) * {PA_STEP})) para encontrar su configuracion de Pressure Advance idonea.	

[gcode_shell_command backup_cfg_github]
command: sh /home/pi/printer_data/config/3dwork-autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG_GITHUB]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg_github
